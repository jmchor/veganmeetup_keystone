// This file is automatically generated by Keystone, do not modify it manually.
// Modify your Keystone config when you want to change this.

datasource postgresql {
  url               = env("DATABASE_URL")
  shadowDatabaseUrl = env("SHADOW_DATABASE_URL")
  provider          = "postgresql"
}

generator client {
  provider = "prisma-client-js"
}

model User {
  id        String    @id @default(cuid())
  name      String    @default("")
  email     String    @unique @default("")
  password  String
  posts     Post[]    @relation("Post_author")
  createdAt DateTime? @default(now())
}

model Post {
  id       String  @id @default(cuid())
  title    String  @default("")
  content  Json    @default("[{\"type\":\"paragraph\",\"children\":[{\"text\":\"\"}]}]")
  author   User?   @relation("Post_author", fields: [authorId], references: [id])
  authorId String? @map("author")
  tags     Tag[]   @relation("Post_tags")

  @@index([authorId])
}

model Tag {
  id    String @id @default(cuid())
  name  String @default("")
  posts Post[] @relation("Post_tags")
}

model Image {
  id                      String     @id @default(cuid())
  image                   Json?
  alt                     String     @default("")
  category                String?    @default("background")
  from_Event_headerImage  Event[]    @relation("Event_headerImage")
  from_Activist_thumbnail Activist[] @relation("Activist_thumbnail")
  from_Podcast_thumbnail  Podcast[]  @relation("Podcast_thumbnail")
  from_Video_thumbnail    Video[]    @relation("Video_thumbnail")
  from_Book_thumbnail     Book[]     @relation("Book_thumbnail")
}

model Event {
  id            String    @id @default(cuid())
  title         String    @default("")
  headerImage   Image?    @relation("Event_headerImage", fields: [headerImageId], references: [id])
  headerImageId String?   @map("headerImage")
  date          DateTime? @postgresql.Date
  from          String    @default("")
  until         String    @default("")
  pastEvent     Boolean   @default(false)
  location      String    @default("")
  content       Json      @default("[{\"type\":\"paragraph\",\"children\":[{\"text\":\"\"}]}]")
  timestamp     DateTime? @default(now())

  @@index([headerImageId])
}

model Activist {
  id          String  @id @default(cuid())
  name        String  @default("")
  url         String  @default("")
  thumbnail   Image?  @relation("Activist_thumbnail", fields: [thumbnailId], references: [id])
  thumbnailId String? @map("thumbnail")
  description String  @default("")

  @@index([thumbnailId])
}

model Podcast {
  id          String  @id @default(cuid())
  name        String  @default("")
  url         String  @default("")
  thumbnail   Image?  @relation("Podcast_thumbnail", fields: [thumbnailId], references: [id])
  thumbnailId String? @map("thumbnail")
  description String  @default("")

  @@index([thumbnailId])
}

model Video {
  id          String  @id @default(cuid())
  name        String  @default("")
  thumbnail   Image?  @relation("Video_thumbnail", fields: [thumbnailId], references: [id])
  thumbnailId String? @map("thumbnail")
  url         String  @default("")
  description String  @default("")

  @@index([thumbnailId])
}

model Book {
  id          String  @id @default(cuid())
  name        String  @default("")
  author      String  @unique @default("")
  thumbnail   Image?  @relation("Book_thumbnail", fields: [thumbnailId], references: [id])
  thumbnailId String? @map("thumbnail")
  url         String  @default("")
  description String  @default("")

  @@index([thumbnailId])
}
